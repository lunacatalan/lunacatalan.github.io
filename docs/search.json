[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Data Science Blogs",
    "section": "",
    "text": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA\n\n\n\n\n\n\n\nGeospatial\n\n\nQuarto\n\n\nR\n\n\nMEDS\n\n\n\n\nInvestigating the access to and need for affordable housing in the Los Angeles County area to guide equitable approaches to the housing crisis.\n\n\n\n\n\n\nMar 9, 2024\n\n\nLuna Herschenfeld-Catalán she/her\n\n\n\n\n\n\n  \n\n\n\n\nClimatic Trends and Agriculture Expansion on Declining Water Levels in Arid Aquifer, Iran\n\n\n\n\n\n\n\nStatistics\n\n\nGeospatial\n\n\nQuarto\n\n\nR\n\n\nPython\n\n\nMEDS\n\n\n\n\nInvestigating the role of climatic and anthropogenic factors on groundwater level declines in the Qazvin Plain Aquifer from 1985-2019.\n\n\n\n\n\n\nDec 14, 2023\n\n\nLuna Herschenfeld-Catalán\n\n\n\n\n\n\n  \n\n\n\n\nAnalysis of Air Quality from Thomas Fire in Santa Barbara\n\n\n\n\n\n\n\nGeospatial\n\n\nQuarto\n\n\nPython\n\n\nMEDS\n\n\n\n\nExploring the effect of the Thomas Fire on Air Quality in Santa Barbara in 2017.\n\n\n\n\n\n\nDec 13, 2023\n\n\nLuna Herschenfeld-Catalán\n\n\n\n\n\n\n  \n\n\n\n\nAnalysis of Houston Blackouts\n\n\n\n\n\n\n\nGeospatial\n\n\nQuarto\n\n\nR\n\n\nMEDS\n\n\n\n\nInvestigating socioeconomic factors in the Houston metropolitan area in the aftermath of two winter storms in February, 2021.\n\n\n\n\n\n\nDec 5, 2023\n\n\nLuna Herschenfeld-Catalán\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Highlighted Coursework: Machine Learning in Environmental Science; Environmental Policy Evaluation; Data Visualization and Communication; Python for Environmental Data Science (EDS); Modeling Environmental Systems; Analytical Workflows and Scientific Reproducibility\n\n\n\n\n\n\n\n\n\n\nHighlighted Coursework: GIS for Environmental Application; Exploring Water Data Honors: Outstanding Senior Award, Environmental Studies"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "",
    "text": "Highlighted Coursework: Machine Learning in Environmental Science; Environmental Policy Evaluation; Data Visualization and Communication; Python for Environmental Data Science (EDS); Modeling Environmental Systems; Analytical Workflows and Scientific Reproducibility\n\n\n\n\n\n\n\n\n\nHighlighted Coursework: GIS for Environmental Application; Exploring Water Data Honors: Outstanding Senior Award, Environmental Studies"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About",
    "section": "",
    "text": "Master’s Capstone Project"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html",
    "href": "blog/2024-03-09-housing-la/index.html",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "",
    "text": "The housing crisis has affected cities across the country. Different approaches to providing resources have had varying degrees of success. Many cities simply need a greater access to affordable housing. Equitable approaches that avoid displacement require understanding what the problems are, where they are occurring, who is being affected, and what is being done currently.\n\n\n\nThe neighborhoods of Maywood, Commerce, Bell Gardens, and Cudahy have high rent burden, high eligibility for affordable housing, and have not had any projects built there.\nA density ridge plot shows the demographic distribution of the census tracts in LA compared to the tracts with affordable housing built in them. There is a greater proportion of Black and Hispanic people in tracts with affordable housing built in them compared to the average across LA.\nA bar plot showing the amount of funding from the LAHD that has gone into building affordable housing. Order in 2015 led to an exponential increase in funding for projects, and the order in 2022 helped expedite permits.\n\n\n\n\n\n\nHOUSEHOLD CENSUS DATA\nAll census data was accessed from census.gov, using an API key and the tidycensus package.\n\nHousehold Income for 2022: Estimated using PUMS (Public Use Microdata Sample) from the American Community Survey. I used the 1-year ACS PUMS file which represents about 1%of the total U.S. population (approximately 1.3 million housing unit records and about 3 million person records). I used the variable HINCP which is household income over the last 12 months, in conjunction with the household size. The file was too big to render every time, so it was exported to csv as pums_2022.csv.\nEligibility calculations: Used information from the Housing Authority of the City of Los Angeles (HACLA) to calculate affordable housing eligibility based on household income and size.\nIncome brackets: Used the equations provided by the U.S Department of Housing and Urban development on income limits.\n\nCENSUS TRACT DATA\n\nTIGER Shapefiles for census tracts in 2022 for California were accessed from census.gov, and used to make more specific observations compared to the PUMA geometries which are areas of every 100,000 people.\n\nNEIGHBORHOODS DATA\n\nCensus tracts and neighborhoods were connected using data from USC’s Neighborhood Data For Social Change which is a lab that aimes to use “data to help local civic actors track measurable change, improve local policies and programs, and ultimately advocate for a better quality of life within their communities”. The data is saved as Census_Tract_Locations__LA__20240206.csv which connected the information from PUMA to the census tract geometries.\n\nAFFORDABLE HOUSING DATA\n\nAffordable housing project data was accessed from data.lacity.org and saved as LAHD_Affordable_Housing_Projects_List__2003_to_Present__20240119.csv. This data set was last updated February 6, 2024, and is owned by the Department of Los Angeles housing. Each entry is a single project that has been started since 2003 to present."
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#wrangle-and-clean-data",
    "href": "blog/2024-03-09-housing-la/index.html#wrangle-and-clean-data",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Wrangle and Clean Data",
    "text": "Wrangle and Clean Data\n\n\nCode\npums_housing_income &lt;- get_pums(state = \"06\",\n                              survey = \"acs1\",\n                              variables = c(\"PUMA\",\n                                            \"NP\", # Number of persons in this household\n                                            \"HINCP\", # Household income (past 12 months, use ADJINC to adjust HINCP to constant dollars\n                                            \"GRPIP\", #Gross rent as a percentage of household income past 12 months\")\n                                            \"FINCP\" # Family income (past 12 months, use ADJINC to adjust FINCP to constant dollars)\n                                            ),\n                              year = 2022)\n\n\n\n\nCode\n# geometry of the puma 2022 shapefiles\npuma &lt;- read_sf(here(\"blog\", \"2024-03-09-housing-la\", \"data\", \"tl_2022_06_puma20\", \"tl_2022_06_puma20.shp\"))\n\npuma_la &lt;- puma %&gt;% \n  filter(grepl(037, PUMACE20)) %&gt;% \n  rename(PUMA = PUMACE20)\n\npums_housing_22 &lt;- read_csv(here::here(\"blog\", \"2024-03-09-housing-la\", \"data\", \"pums_2022.csv\"))\n\n# remove the duplicates from 2022 data\npuma_house_codes &lt;- pums_housing_22 %&gt;% \n  select(SERIALNO, PUMA) %&gt;% \n  distinct()\n\npuma_22 &lt;- pums_housing_22 %&gt;% \n  inner_join(puma_la, by = \"PUMA\") %&gt;% \n  select(SERIALNO, WGTP, NP, HINCP, FINCP, GRPIP) %&gt;% \n  mutate(NP = as.numeric(NP),\n         HINCP = as.numeric(HINCP),\n         FINCP = as.numeric(FINCP),\n         GRPIP = as.numeric(GRPIP)) %&gt;% \n  group_by(SERIALNO) %&gt;% \n  summarize_all(mean, na.rm = TRUE) %&gt;% \n  left_join(puma_house_codes)\n\nla_tract_vacant &lt;- get_acs(\n  state = \"CA\",\n  county = \"Los Angeles\",\n  geography = \"tract\",\n  variables = \"B25004_001\",\n  geometry = TRUE,\n  year = 2022\n)\n\nla_tract &lt;- la_tract_vacant %&gt;%\n  mutate(NAME = gsub(\"; Los Angeles County; California\", # elements that you want to remove\n                                  \"\", # replace with blank\n                                  NAME)) %&gt;%\n  mutate(NAME = gsub(\"Census Tract \", # elements that you want to remove\n                                  \"\", # replace with blank\n                                  NAME)) %&gt;% \n  filter(GEOID != \"06037599100\") %&gt;% # islands\n  filter(GEOID != \"06037599000\") %&gt;% # islands\n  filter(GEOID != \"06037980003\") %&gt;%\n  filter(GEOID != \"06037980004\") %&gt;%\n  filter(!(NAME &gt;= 9000 & NAME &lt;= 9800))\n\n\n# -------------------------------------------------\n## Looking at the places where affordable housing projects have been built since 2003\n# --------------------------------------------------\n\n# read in affordable housing projects in LA from 2003 to present\nah_raw &lt;- read_csv(here(\"blog\", \"2024-03-09-housing-la\", \"data\", \"LAHD_Affordable_Housing_Projects_List__2003_to_Present__20240119.csv\")) %&gt;% \n  clean_names()\n\n# clean affordable housing data \nah_clean &lt;- ah_raw %&gt;% \n  mutate(fun_date = as.Date(date_funded, tryFormats = c(\"%m/%d/%Y\"))) %&gt;% # make date_funded as date\n  mutate(year = lubridate::year(fun_date)) %&gt;% # make into year column \n  select(name, year, fun_date, construction_type, site_community, total_units = project_total_units, \n         housing_type, lahd_funded, in_service_date, gps_coords_on_map) %&gt;% \n  mutate(gps_coords_on_map = gsub(\"[POINT()]\", # elements that you want to remove\n                                  \"\", # replace with blank\n                                  gps_coords_on_map)) %&gt;% # remove these elements from gps column \n  separate_wider_delim(gps_coords_on_map, \n                       delim = \" \", names = c(\"empty\", \"coords\"), # separate space from before the coordinates\n                       too_many = \"merge\") %&gt;% \n  separate_wider_delim(coords, delim = \" \", names = c(\"Longitude\", \"Latitude\"), # split lat and long coords\n                       too_many = \"merge\") %&gt;% \n  select(-empty) %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), # make into geometry object\n                 crs = st_crs(la_tract)) %&gt;% \n  st_join(la_tract) %&gt;% \n  mutate(site_community = str_to_title(site_community))"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#create-income-breaks-for-households-above-8-from-9-20",
    "href": "blog/2024-03-09-housing-la/index.html#create-income-breaks-for-households-above-8-from-9-20",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Create income breaks for households above 8 (from 9-20)",
    "text": "Create income breaks for households above 8 (from 9-20)\n\n\nCode\n# very low income \nsize &lt;- seq(9, 20, 1)\nvery_low &lt;- data.frame()\nrow_n &lt;- data.frame()\n\nfor (i in seq_along(size)) {\n  income &lt;- 1.32 + (i*.08)\n  limit &lt;- income*56300\n  row &lt;- size[i]\n  row_n &lt;- rbind(row_n, row)\n  very_low = rbind(very_low, limit)\n}\n\nvery_low &lt;- cbind(row_n, very_low) %&gt;% \n  rename(people = X9,\n         very_low = X78820)\n\nextreme &lt;- data.frame()\nfor (i in seq_along(size)) {\n  # https://www.huduser.gov/portal/datasets/il/il2020/2020ILCalc3080.odn#calculator\n  income &lt;- 44120 + (i*4480)\n  extreme &lt;- rbind(extreme, income)\n}\n\nlow &lt;- data.frame()\nfor (i in seq_along(size)) {\n  income &lt;- 1.32 + (i*.08)\n  limit &lt;- income*90100\n  low &lt;- rbind(low, limit)\n}\n\ncols_9_20 &lt;- cbind(extreme, very_low) %&gt;% \n  rename(extreme_low = X48600) %&gt;% \n  cbind(low) %&gt;% \n  rename(low = X126140)\n\nincome_breaks &lt;- rbind(income_breaks, cols_9_20)"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#creating-for-loop",
    "href": "blog/2024-03-09-housing-la/index.html#creating-for-loop",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Creating For Loop",
    "text": "Creating For Loop\n\nApplying for loop to the whole data set\n\n\nCode\npuma_22$status &lt;- rep(NA, nrow(puma_22))\n\nfor (person in 1:nrow(puma_22)) {\n  \n  individual &lt;- puma_22$NP[person]\n  \n  income &lt;- income_breaks %&gt;% \n    filter(people == individual)\n  \n  #print(individual)\n  #print(individual)\n  # Define thresholds for labels\n  extreme_threshold &lt;- income[[2]]\n  very_low_threshold &lt;- income[[3]]\n  low_threshold &lt;- income[[4]]\n  \n  # # Assign labels based on thresholds\n  puma_22$status[person] &lt;- ifelse(puma_22[[\"HINCP\"]][person] &lt;= extreme_threshold, \n                              \"extreme\",\n                              ifelse(puma_22[[\"HINCP\"]][person] &gt; extreme_threshold & puma_22[[\"HINCP\"]][person] &lt;= very_low_threshold, \n                                     \"very low\",\n                                     ifelse(puma_22[[\"HINCP\"]][person] &gt; very_low_threshold & puma_22[[\"HINCP\"]][person] &lt;= low_threshold, \n                                            \"low\",\n                                            ifelse(puma_22[[\"HINCP\"]][person] &gt; low_threshold, \"not eligible\", \"non\"))))\n}"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#eligibility",
    "href": "blog/2024-03-09-housing-la/index.html#eligibility",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Eligibility",
    "text": "Eligibility\n\n\nCode\n# eligibility of housing in LA\ntract_eligibility_percent &lt;- ggplot(tract_eligibility) +\n  geom_sf(aes(fill = percent_eligible)) +\n  scale_fill_stepsn(colors = my_brew_palette5,\n                    labels = scales::label_percent(scale = 1),\n                    breaks = scales::breaks_width(width = 7)) +\n  labs(title = \"Exploring Affordable Housing Needs in Los Angeles County, CA\",\n       fill = \"Percent Eligible\",\n       caption = \"Households Eligible for Affordable Housing by PUMA in Los Angeles, CA\") + \n  guides(fill = guide_colorbar(barheight = unit(1, units = \"mm\"),  \n                                 barwidth = unit(100, units = \"mm\"),\n                                 direction = \"horizontal\",\n                                 ticks.colour = \"grey20\",\n                                 title.position = \"top\",\n                                 label.position = \"bottom\",\n                                 title.hjust = 0.5)) +\n  my_theme_dark"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#identify-the-neighborhoods-in-the-census-tracts-chosen",
    "href": "blog/2024-03-09-housing-la/index.html#identify-the-neighborhoods-in-the-census-tracts-chosen",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Identify the neighborhoods in the census tracts chosen",
    "text": "Identify the neighborhoods in the census tracts chosen\n\n\nCode\n# label Neighborhoods \nn_labels &lt;- data.frame(long = c(33.968132, 33.99926595, 33.9924535, 33.9583695),\n                     lat = c(-118.154518, -118.152339, -118.195177, -118.1809385), \n                     label = c(\"Bell Gardens\", \"Commerce\", \"Maywood\", \"Cudahy\"))\n\nggplot(data = burden_non %&gt;% st_union()) +\n  geom_sf(fill = \"#AA592C\", color = \"white\", \n          lwd = 0.2) +\n  geom_point(data = n_labels, \n             aes(x = lat, y = long),\n             color = \"white\") +\n  geom_text(data = n_labels, \n            aes(x = lat, y = long, label = label),\n            vjust = -1, \n            color = \"white\", \n            family = \"alice\",\n            size = 9) +\n  guides(fill = \"none\") +\n  my_theme_dark"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#rent-burden-with-affordable-housing-projects-and-plot",
    "href": "blog/2024-03-09-housing-la/index.html#rent-burden-with-affordable-housing-projects-and-plot",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Rent Burden with affordable housing projects and plot",
    "text": "Rent Burden with affordable housing projects and plot\n\n\nCode\nbase_map &lt;- ggplot(rent_burdened) +\n  geom_blank() +\n  geom_sf(aes(fill = percent_burden), color = \"black\", lwd = 0.05) +\n  scale_fill_stepsn(colors = rev(colors),\n                    breaks = scales::breaks_width(width = 5),\n                    labels = scales::label_percent(scale = 1)) +\n  guides(fill = guide_colorbar(barheight = unit(1, units = \"mm\"),\n                                 barwidth = unit(220, units = \"mm\"),\n                                 direction = \"horizontal\",\n                                 ticks.colour = \"grey20\",\n                                 title.position = \"top\",\n                                 label.position = \"bottom\",\n                                 title.hjust = 0.5)) +\n  geom_sf(data = ah_clean, aes(color = \"skyblue\"), alpha = 0.5, size = 1, color = \"skyblue\") +\n  labs(fill = \"Percent of Census Tract Burdened\") +\n  guides(color = \"Hello\") +\n  my_theme_dark\n\n# create the arrow \nburden_non_pt &lt;- data.frame(\n  y = c(33.99),\n  x = c(-118.13795),\n  #     yend = c(33.93291),\n  # xend = c(-118.66136)\n  yend = c(33.877222),\n  xend = c(-117.92694)\n)\n\n# add arrow to the plot \nbase_map +\n    geom_curve(data = burden_non_pt,\n             aes(x = x, y = y, xend = xend, yend = yend),\n             arrow = arrow(length = unit(0.01, \"npc\"), type = \"open\"),\n             #linetype = \"dashed\",\n             curvature = -0.3,\n             size = 1.5,\n             color = \"#AA592C\")"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#getting-the-demographics",
    "href": "blog/2024-03-09-housing-la/index.html#getting-the-demographics",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Getting the demographics",
    "text": "Getting the demographics\n\n\nCode\n# load list of variables that I could access\nvariables &lt;- load_variables(2022, \"acs1\", cache = TRUE)\n\nah_tracts &lt;- unique(ah_clean$NAME)\n\n# B01001A is Sex by Age (White Alone)\n# B01001B is Sex by Age (Black or African American Alone)\n# B01001\n\n B01001 &lt;- variables %&gt;% \n  filter(str_detect(name, \"B01001\"))\n\n# has the de\nla_tract_age &lt;- get_acs(\n  state = \"CA\",\n  county = \"Los Angeles\",\n  geography = \"tract\",\n  variables = B01001$name,\n  geometry = TRUE,\n  year = 2022\n)\n\ntract_ethnicity &lt;- la_tract_age %&gt;%\n  mutate(NAME = gsub(\"; Los Angeles County; California\", # elements that you want to remove\n                                  \"\", # replace with blank\n                                  NAME)) %&gt;%\n  mutate(NAME = gsub(\"Census Tract \", # elements that you want to remove\n                                  \"\", # replace with blank\n                                  NAME)) %&gt;% \n  rename(census_tract = NAME)\n\n#unique(tract_ethnicity$census_tract)\n\n# - make a list of the census tracts of interest \non_plot &lt;- lowburden_ah %&gt;% \n  mutate(area = \"lowburden_ah\") %&gt;% \n  rbind(burden_ah %&gt;% mutate(area = \"burden_ah\")) %&gt;% \n  rbind(burden_non %&gt;%  mutate(area = \"burden_non\")) %&gt;% \n  rbind(lowburden_non %&gt;% mutate(area = \"lowburden_non\")) %&gt;% \n  select(census_tract, area)\n\n# - filter the tracts in the age / race df \nsex_age_ethnicity &lt;- tract_ethnicity %&gt;% \n  \n  # - replace the variables with more intuitive information \n  mutate(variable = gsub(\"B01001A\",\n                       \"white\",\n                       variable),\n         variable = gsub(\"B01001B\",\n                       \"black\",\n                       variable),\n         variable = gsub(\"B01001C\",\n                       \"ai\", # american indian and alaska native\n                       variable),\n         variable = gsub(\"B01001D\",\n                       \"asian\",\n                       variable),\n         variable = gsub(\"B01001E\",\n                       \"haw\", # hawaiian and pacific islander\n                       variable),\n         variable = gsub(\"B01001F\",\n                       \"other\",\n                       variable),\n         variable = gsub(\"B01001G\",\n                       \"two\", # two or more \n                       variable),\n                  variable = gsub(\"B01001H\",\n                       \"wn\", # white non hispanic and latino\n                       variable),\n         variable = gsub(\"B01001I\",\n                       \"hisp\", # hispanic and latino\n                       variable),\n         variable = gsub(\"B01001_\",\n                       \"total_\",\n                       variable)) %&gt;% \n  separate_wider_delim(cols = 3,\n                       delim = \"_\",\n                       names = c(\"group\", \"age_variable\")) \n\n\n\nah_tracts_eth &lt;- sex_age_ethnicity %&gt;% \n  filter(census_tract %in% ah_tracts) %&gt;% \n  filter(age_variable == \"001\") %&gt;% \n  select(-c(GEOID, age_variable, moe, geometry)) %&gt;% \n  mutate(status = \"affordable\")\n\nah_tot &lt;- ah_tracts_eth %&gt;% \n  filter(group == \"total\") %&gt;% \n  select(census_tract, group, estimate) %&gt;% \n  rename(totals = group,\n         total_est = estimate)\n\nah_tracts_eth &lt;- ah_tracts_eth %&gt;% \n  filter(group != \"total\") %&gt;% \n  left_join(ah_tot, by = \"census_tract\") %&gt;% \n  mutate(percent = round((estimate/total_est)*100, 1)) %&gt;% \n  select(census_tract, group, estimate, percent, status) \n\nall_eth &lt;- sex_age_ethnicity %&gt;% \n  filter(census_tract %in% rent_burdened$census_tract) %&gt;% \n  filter(age_variable == \"001\") %&gt;% \n  select(-c(GEOID, age_variable, moe, geometry)) %&gt;% \n  mutate(status = \"non\")\n\nall_tot &lt;- all_eth %&gt;% \n  filter(group == \"total\") %&gt;% \n  select(census_tract, group, estimate) %&gt;% \n  rename(totals = group,\n         total_est = estimate)\n\nall_eth &lt;- all_eth %&gt;% \n  filter(group != \"total\") %&gt;% \n  left_join(all_tot, by = \"census_tract\") %&gt;% \n  mutate(percent = round((estimate/total_est)*100, 1)) %&gt;% \n  select(census_tract, group, estimate, percent, status) \n\n# combine the tracts\ncompare &lt;- all_eth %&gt;% \n  rbind(ah_tracts_eth) %&gt;% \n  rename(groups = group) %&gt;% \n  filter(!groups %in% c(\"ai\", \"haw\", \"two\"))"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#comparing-the-demographics-of-all-of-la-vs-the-census-tracts-with-affordable-housing-in-them",
    "href": "blog/2024-03-09-housing-la/index.html#comparing-the-demographics-of-all-of-la-vs-the-census-tracts-with-affordable-housing-in-them",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Comparing the demographics of all of LA vs the census tracts with Affordable housing in them",
    "text": "Comparing the demographics of all of LA vs the census tracts with Affordable housing in them\n\n\nCode\nshowtext_auto()\n\ncustom_labels &lt;- c(\"White (non Hispanic \\nor Latino)\", \"White\", \"Other\", \"Hispanic\", \"Black\", \"Asian\")\n\nsubtitle &lt;- \"Compared to the demographic distribution of &lt;span style = 'color: #DDB472; font-size: 16pt;'&gt;census tracts in Los Angeles overall&lt;/span&gt;, the &lt;span style = 'color: skyblue; font-size: 16pt;'&gt;census tracts that have affordable housing&lt;/span&gt; projects built since 2003 have **greater** proportions of blank and hispanic individuals.\"\n\nc_means &lt;- compare %&gt;% \n  group_by(status, groups) %&gt;% \n  summarize(means = mean(percent, na.rm = TRUE),\n            .groups = \"drop\")\n\nggplot(compare) +\n  geom_density_ridges(aes(x = percent, y = groups, fill = status, linetype = status), \n                      alpha = 0.7, \n                      quantile_lines=TRUE,\n                      quantile_fun = mean,\n                      scale = 0.9) +\n  scale_y_discrete(expand = c(0.01, 0.5),\n                   labels = rev(custom_labels)) +\n  xlim(0,100) +\n  scale_fill_manual(values = c(\"skyblue\", \"#DDB472\")) +\n  geom_text(data = c_means, aes(x = means, y = groups, label = round(means, 0), \n                                color = status),\n            family = \"alice\",\n            vjust = 1.5, \n            size = 6) +\n  scale_color_manual(values = c(\"skyblue\", \"#DDB472\")) +\n  labs(y = \"Percent of Census Tract\", \n       x = \"\",\n      caption = subtitle,\n       fill = \"\"\n       ) +\n  guides(fill = \"none\", linetype = \"none\", color = \"none\") +\n  theme(plot.subtitle = element_markdown(ggtext::element_textbox_simple(family = \"alice\", size = 10, color = \"white\"))) +\n  theme(plot.title = element_text(size = 20, face = \"bold\", family = \"playfairDisplay\", hjust = 0.5), # Font size set to 16 and bold.\n        plot.caption.position = \"plot\",\n        plot.caption =  ggtext::element_textbox_simple(size = 15, hjust = 0, family = \"alice\", color = \"white\"),\n        axis.title = element_text(size = 14), # Font size set to 12.\n        axis.text.y = element_text(size = 16, color = \"white\", family = \"alice\"),\n        axis.text.x = element_blank(),\n        #axis.ticks.x = element_line(size = 10, color = \"white\"),\n        legend.title = element_text(size = 15, face = \"bold\", family = \"alice\", color = \"white\"), # Font size of the title of the legend set to 12 and bold.\n        legend.text = element_text(size = 10, color = \"white\"), # font size of the text in the legend\n        plot.background = element_rect(fill = \"black\"),\n        panel.background = element_rect(fill = \"black\"),\n        legend.background = element_rect(fill = \"black\"),\n        plot.margin = margin(12, 6, 12, 18),\n        #axis.line.x = element_line(color = \"white\"),\n        panel.grid = element_blank(), # invisible auxiliary grids\n        #panel.grid.minor.x = element_line(color = \"white\"),\n        strip.background = element_rect(fill = \"black\", color = \"#ff975d\"), # strip background\n        strip.text = element_text(size = 12, face = \"bold\", family = \"alice\", color = \"white\"), # strip texts\n        legend.position = \"top\", # position of the legend\n        legend.box.background = element_rect(color = \"black\"), # background of the plot\n        legend.key.size = unit(1, \"cm\") # size of the legends key\n  )"
  },
  {
    "objectID": "blog/2023-13-23/thomas-fire.html",
    "href": "blog/2023-13-23/thomas-fire.html",
    "title": "Analysis of Air Quality from Thomas Fire in Santa Barbara",
    "section": "",
    "text": "The Thomas Fire in 2017, image from NASA Modis Satellite."
  },
  {
    "objectID": "blog/2023-13-23/thomas-fire.html#project-background",
    "href": "blog/2023-13-23/thomas-fire.html#project-background",
    "title": "Analysis of Air Quality from Thomas Fire in Santa Barbara",
    "section": "Project background",
    "text": "Project background\nIn this blog I will investigate the Thomas Fire that occured in California in 2017. The Thomas Fire occured in 2017 and burned for over 40 days. The fire destroyed over 280,00 acres, destroyed 1,063 structures and resulted in one civilian and one firefighter fatality (VCFD, 2019). Understanding the impact on Air Quality is important for public health advisories, and planning public and emergency response when the next fire occurs.\nI will create a time series graph to visualize the impact of the fire on the air quality index (AQI) of Santa Barbara County, and a false color image to understand the extent of the fire.\nThis analysis can be accessed at the repo here: Repository link"
  },
  {
    "objectID": "blog/2023-13-23/thomas-fire.html#highlights",
    "href": "blog/2023-13-23/thomas-fire.html#highlights",
    "title": "Analysis of Air Quality from Thomas Fire in Santa Barbara",
    "section": "Highlights",
    "text": "Highlights\n\nData wrangling and exploration using pandas\nGeospatial analysis of false and true color images with geopandas and rioxarray\nCreating visualizations to give context for AQI measures as a result of the Thomas Fire"
  },
  {
    "objectID": "blog/2023-13-23/thomas-fire.html#data-information",
    "href": "blog/2023-13-23/thomas-fire.html#data-information",
    "title": "Analysis of Air Quality from Thomas Fire in Santa Barbara",
    "section": "Data Information",
    "text": "Data Information\nDataset 1: AQI\nIn this task you will use Air Quality Index (AQI) data from the US Environmental Protection Agency to visualize the impact on the AQI of the 2017 Thomas Fire in Santa Barbara County.\nDataset 2: Landsat\nA simplified collection of bands (red, green, blue, near-infrared and shortwave infrared) from the Landsat Collection 2 Level-2 atmosperically corrected surface reflectance data, collected by the Landsat 8 satellite.\nDataset 3:\nA shapefile of fire perimeters in California during 2017. The complete file can be accessed in the CA state geoportal."
  },
  {
    "objectID": "blog/2023-13-23/thomas-fire.html#step-3-data-selection",
    "href": "blog/2023-13-23/thomas-fire.html#step-3-data-selection",
    "title": "Analysis of Air Quality from Thomas Fire in Santa Barbara",
    "section": "Step 3: Data Selection",
    "text": "Step 3: Data Selection\nNow that we have a clean dataframe, we want to be able to select AQI information for Santa Barbara. We also dont want a lot of the other county information since we are only interested in SB, so we can drop those columns.\nSince we are interested in the AQI over time, we want to make sure that we can plot the time series correctly. To do that we want to check our data types to make sure that the date column is in the right format.\n\n\nCode\n# select only SB county and drop column names\naqi_sb = aqi[aqi.county_name == 'Santa Barbara'].drop(['state_name', # drop these columns \n                                                       'county_name', \n                                                       'state_code', \n                                                       'county_code'], axis = 1)\n\naqi_sb.dtypes\n\n\ndate                         object\naqi                           int64\ncategory                     object\ndefining_parameter           object\ndefining_site                object\nnumber_of_sites_reporting     int64\ndtype: object\n\n\nAs we can see above, the date column is not in the correct format. Since we are interested in plotting this data as time series, we want to make sure that the date column is in datetime so that it can plot correctly.\nYou can see that the date is now in datetime format!\n\n\nCode\n# update date column to datetime type\naqi_sb['date'] = pd.to_datetime(aqi_sb['date'])\n\naqi_sb.dtypes\n\n\ndate                         datetime64[ns]\naqi                                   int64\ncategory                             object\ndefining_parameter                   object\ndefining_site                        object\nnumber_of_sites_reporting             int64\ndtype: object"
  },
  {
    "objectID": "blog/2023-13-23/thomas-fire.html#step-4-aqi-data-manipulation",
    "href": "blog/2023-13-23/thomas-fire.html#step-4-aqi-data-manipulation",
    "title": "Analysis of Air Quality from Thomas Fire in Santa Barbara",
    "section": "Step 4: AQI Data Manipulation",
    "text": "Step 4: AQI Data Manipulation\nIn this step we are going to prepare the data for plotting by making calculating the 5 day average rolling mean to smooth the data and make it more understandable visually.\nTo make plotting easier, we will first det the date column as the index. Then, we want to create a new column with the new 5 day average mean.\n\n\nCode\n# set date as index for easy plotting\naqi_sb = aqi_sb.set_index('date')\n\n# create new column with 5 day mean\naqi_sb['five_day_average'] = aqi_sb.aqi.rolling('5D').mean()"
  },
  {
    "objectID": "blog/2023-13-23/thomas-fire.html#step-6-prepare-ca-fire-data",
    "href": "blog/2023-13-23/thomas-fire.html#step-6-prepare-ca-fire-data",
    "title": "Analysis of Air Quality from Thomas Fire in Santa Barbara",
    "section": "Step 6: Prepare CA Fire Data",
    "text": "Step 6: Prepare CA Fire Data\nFirst, we are going to compare the crs of the landsat and fire data to see if we have to make any updates. Since these datasets have difference crs, we are are going to reproject the ca_fire data to the landsat data.\n\n\nCode\n# check crs\nprint(f\"ca_fire: {ca_fire.crs}\\nlandsat: {landsat.rio.crs}\")\n\n\nca_fire: EPSG:3857\nlandsat: EPSG:32611\n\n\n\n\nCode\n# update fire crs to landsat crs\nca_fire = ca_fire.to_crs(\"EPSG:32611\")\n\n\nNow that that is done, we want to make sure that the ca_fire data is easy to work with.\nThe column names are all in caps and we have decided that that’s annoying, so we want to update the column names.\n\n\nCode\n# set all column names to lower case for easier wrangling \nca_fire.columns = ca_fire.columns.str.lower()\n\n\nthe column names are:  Index(['index', 'OBJECTID', 'YEAR_', 'STATE', 'AGENCY', 'UNIT_ID', 'FIRE_NAME',\n       'INC_NUM', 'ALARM_DATE', 'CONT_DATE', 'CAUSE', 'C_METHOD', 'OBJECTIVE',\n       'GIS_ACRES', 'COMMENTS', 'COMPLEX_NA', 'COMPLEX_IN', 'IRWINID',\n       'FIRE_NUM', 'DECADES', 'SHAPE_Leng', 'SHAPE_Area', 'geometry'],\n      dtype='object')"
  },
  {
    "objectID": "blog/2023-13-23/thomas-fire.html#step-7-fire-data-selection",
    "href": "blog/2023-13-23/thomas-fire.html#step-7-fire-data-selection",
    "title": "Analysis of Air Quality from Thomas Fire in Santa Barbara",
    "section": "Step 7: Fire Data selection",
    "text": "Step 7: Fire Data selection\nWe are only interested in mapping the Thomas fire that we have the AQI data for. In this next step, we want to only choose the Thomas fires from the california fire dataset. This will result in a single polygon:\n\n\nCode\n# select only the Thomas Fires\nthomas_fire = ca_fire[ca_fire.fire_name == 'THOMAS']\nthomas_fire\n\n\n\n\n\n\n\n\n\nindex\nobjectid\nyear_\nstate\nagency\nunit_id\nfire_name\ninc_num\nalarm_date\ncont_date\n...\ngis_acres\ncomments\ncomplex_na\ncomplex_in\nirwinid\nfire_num\ndecades\nshape_leng\nshape_area\ngeometry\n\n\n\n\n436\n20274\n41874\n2017\nCA\nUSF\nVNC\nTHOMAS\n00003583\n2017-12-04\n2018-01-12\n...\n281790.875\nCONT_DATE based on Inciweb\nNaN\nNaN\nNaN\nNaN\n2010\n540531.887458\n1.681106e+09\nMULTIPOLYGON (((259241.263 3814482.913, 259193...\n\n\n\n\n1 rows × 23 columns"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "I am currently a masters student at the Bren School of Environmental Science and Management. I want to be at the intersection of data and policy to foster effective communication in the development of solutions. My main areas of interest are water and agriculture, equitable access to affordable housing and education, and urban design. When I’m not sciencing, I can be found dancing, running, swimming, or perfecting my focaccia recipe (it’s almost there)."
  },
  {
    "objectID": "index.html#luna-herschenfeld-catalán",
    "href": "index.html#luna-herschenfeld-catalán",
    "title": "",
    "section": "",
    "text": "I am currently a masters student at the Bren School of Environmental Science and Management. I want to be at the intersection of data and policy to foster effective communication in the development of solutions. My main areas of interest are water and agriculture, equitable access to affordable housing and education, and urban design. When I’m not sciencing, I can be found dancing, running, swimming, or perfecting my focaccia recipe (it’s almost there)."
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Climatic Trends and Agriculture Expansion on Declining Water Levels in Arid Aquifer, Iran",
    "section": "",
    "text": "REPOSITORY: To find full analysis click this repo!"
  },
  {
    "objectID": "blog/index.html#multiple-linear-regression-with-aei-mean",
    "href": "blog/index.html#multiple-linear-regression-with-aei-mean",
    "title": "Climatic Trends and Agriculture Expansion on Declining Water Levels in Arid Aquifer, Iran",
    "section": "Multiple Linear Regression with AEI mean",
    "text": "Multiple Linear Regression with AEI mean\nI conducted an OLS multiple linear regression with lm() to look at how AEI and precipitation impacted the change in groundwater level. The results of the OLS regression are shown in Figure XYZ. I used ggplot() to create a scatter plot of the mean AEI and groundwater level change over time. Then I used geom_smooth() to plot a linear regression to see how these variables changed over time. The groundwater change slope is negative, and the AEI slope is positive.\n\n\nCode\nir_gw_plot\n\n\n\n\n\nThe result of the multiple linear regression model are in Table 1, and they indicate that for every 1 ha increase in AEI, there is a 0.01 m decrease in groundwater level. The effect of AEI has a p-value of 0.032, which is small enough that there is statistical significance of this analysis. However, the p-value for annual precipitation is 0.591, meaning that there can be no statistical significance taken from the role of precipitation on groundwater level change. This model had an R^2 value of 0.50 which means it explained 50% of the variation in groundwater level change.\n\n\n\nTable 1: Results of Multiple Linear Regression of Area Equipped for Irrigation and Precipitation on Groundwater Level Change\n\n\n\n\n\nTable 2: Results of Simple Linear Regression of Area Equipped on Irrigation on Groundwater Level Change\n\n\nThen I ran a simple linear regression model to see the effect of just AEI mean. The results in Table 2 show that the p-value is 0.02, which increases our confidence level that AEI mean is statistically significant. Here, the R^2 value has increased to 0.56, which means this model explains 56% of the variation in groundwater level change. Given the higher R^2 value, this model is more useful than the one that includes precipitation."
  },
  {
    "objectID": "blog/index.html#simple-linear-regression-with-median-soil-adjusted-vegetation-index-savi",
    "href": "blog/index.html#simple-linear-regression-with-median-soil-adjusted-vegetation-index-savi",
    "title": "Climatic Trends and Agriculture Expansion on Declining Water Levels in Arid Aquifer, Iran",
    "section": "Simple Linear Regression with median Soil Adjusted Vegetation Index (SAVI)",
    "text": "Simple Linear Regression with median Soil Adjusted Vegetation Index (SAVI)\n\n\n\nFigure 2: Buffer and Aquifer crop of Landsat satellite image\n\n\nI was unhappy with the temporal resolution of the irrigation data, since it was an aggregate in 5-year chunks that was already accessing data samples. To have more confidence in my results, I calculated the SAVI from the area of a buffer around the well being used to to collect the groundwater level data, and across the aquifer in Python. Then I extracted summary statistics from each raster.\n\n\nCode\nsavi_plot\n\n\n\n\n\nI fit a linear regression model to the data as seen in Figure 3. This graph indicates that over time the median index value around the groundwater well was decreasing. Since the scale is from 0-1, the table results make more snese when you divide by 10. Reading it that way, for every 0.1 increase in the SAVI index, groundwater levels. The results of the quadratic regression are shown in Table 3, and show a statistically significant effect (p-value of 0.001) of the median SAVI in the buffer on the groundwater levels. Furthermore, the R^2 value is 0.30, which means this model accounts for 30% of the variation in groundwater level change.\n\n\n\nTable 3: Results of Simple Linear Regression of median Soil Adjusted Vegetation Index (SAVI) on Irrigation on Groundwater Level Change\n\n\nHYPOTHESIS TESTING\nDue to the statistical significance of the median soil adjusted vegetation index and the non-statistical significance of the annual precipitation, we fail to accept the null hypothesis.\nNull Hypothesis: In the Qazvin Plain, there is no difference of the impact of annual precipitaion and agricultural production changes on groundwater level changes from 1984-2019.\nAlternative Hypothesis: In the Qazvin Plain, there is a difference of the impact of annual precipitation and agricultural production on groundwater level changes from 1984-2019.\nCONFIDENCE INTERVAL\nI calculated a confidence interval and am 95% confident that the true change in groundwater level for every 0.1 increase in the median SAVI, is within the range of 1.6 and 5.5m."
  },
  {
    "objectID": "blog/index.html#footnotes",
    "href": "blog/index.html#footnotes",
    "title": "Climatic Trends and Agriculture Expansion on Declining Water Levels in Arid Aquifer, Iran",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nI used NDVI initially but realized that there was very sparse vegetation in the area and so I would want to account for the soil reflectance.↩︎"
  },
  {
    "objectID": "blog/2023-12-5-houston-blackouts/index.html",
    "href": "blog/2023-12-5-houston-blackouts/index.html",
    "title": "Analysis of Houston Blackouts",
    "section": "",
    "text": "What socioeconomic factors are correlated with the occurrence of blackouts in Houston, Texas?"
  },
  {
    "objectID": "blog/2023-12-5-houston-blackouts/index.html#research-question",
    "href": "blog/2023-12-5-houston-blackouts/index.html#research-question",
    "title": "Analysis of Houston Blackouts",
    "section": "",
    "text": "What socioeconomic factors are correlated with the occurrence of blackouts in Houston, Texas?"
  },
  {
    "objectID": "blog/2023-12-5-houston-blackouts/index.html#project-background",
    "href": "blog/2023-12-5-houston-blackouts/index.html#project-background",
    "title": "Analysis of Houston Blackouts",
    "section": "Project Background",
    "text": "Project Background\nIn February 2021, Texas experienced multiple winter storms that led to power outages across the state and left over 4.5 million homes and businesses without power1. In light of this disaster, understanding the different factors that influence recovery is important to implement management strategies if this happens again. Exploring the socioeconomic factors of those that experienced blackouts is the first step to understanding paths to recovery."
  },
  {
    "objectID": "blog/2023-12-5-houston-blackouts/index.html#goals",
    "href": "blog/2023-12-5-houston-blackouts/index.html#goals",
    "title": "Analysis of Houston Blackouts",
    "section": "Goals",
    "text": "Goals\n\nInvestigate socioeconomic factors associated with occurrence of blackouts in Houston, Texas metropolitan area.\nExplore the socioeconomic factors that influenced recovery post blackouts in the Houston"
  },
  {
    "objectID": "blog/2023-12-5-houston-blackouts/index.html#takeaways",
    "href": "blog/2023-12-5-houston-blackouts/index.html#takeaways",
    "title": "Analysis of Houston Blackouts",
    "section": "Takeaways",
    "text": "Takeaways\n\nThere was no difference in the median income distribution of counties that experienced blackouts and those that did not experience blackouts.\nMore exploration of income distribution at a finer spatial resolution would be beneficial to understand any economic disparities in the preparedness for buildings to handle winter storms in Houston, Texas."
  },
  {
    "objectID": "blog/2023-12-5-houston-blackouts/index.html#sources",
    "href": "blog/2023-12-5-houston-blackouts/index.html#sources",
    "title": "Analysis of Houston Blackouts",
    "section": "Sources",
    "text": "Sources\nLIGHT DATA\nThe VIIRS data is distributed in 10x10 degree tiles in sinusoidal equal-area projection. They are identified by horizontal (h) and vertical (v) position in the grid. Houston is included in two tiles: h08v05 and h08v06. We can access tiles through NASA’s Level-1 and Atmospheric Archive & Distribution System Distributed Active Archive Center (LAADS DAAC). Since we have two dates, we need to access these tiles on each day.\n\n\nROAD AND BUILDING DATA\nSince highways account for a large amount of night lights, we want to exclude areas near highways to prevent falsely identifying areas with reduced traffic as areas without power. A shapefile with all of the highways in Texas was prepared by Geofabrik’s download sites, and we compiled a subset of roads that intersect the Houston metropolitan area in a Geopackage (.gpkg file). We prepared a GeoPackage with only houses in the Houston Metropolitan Area using building data from OpenStreetMap which was also provided by Geofabrik.\n\n\nSOCIOECONOMIC DATA\nWe used the U.S. Census Bureau’s American Community Survey for census tracts in 2019 as a proxy for socioeconomic information at the county level. This data is stored in a folder: ACS_2019_5YR_TRACT_48.gdb which has layers that can be accessed using st_layers(). Each layer is a subset of the fields contained in ACS metadata.\nSince the layers are separate, to access the ACS attributes associated with the geemetries you have to combine them into a single feature layer."
  },
  {
    "objectID": "blog/2023-12-5-houston-blackouts/index.html#footnotes",
    "href": "blog/2023-12-5-houston-blackouts/index.html#footnotes",
    "title": "Analysis of Houston Blackouts",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nWikipedia. 2021. “2021 Texas power crisis.” Last modified October 2, 2021. https://en.wikipedia.org/wiki/2021_Texas_power_crisis.↩︎"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#research-question",
    "href": "blog/2024-03-09-housing-la/index.html#research-question",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "",
    "text": "The housing crisis has affected cities across the country. Different approaches to providing resources have had varying degrees of success. Many cities simply need a greater access to affordable housing. Equitable approaches that avoid displacement require understanding what the problems are, where they are occurring, who is being affected, and what is being done currently.\n\n\n\nThe neighborhoods of Maywood, Commerce, Bell Gardens, and Cudahy have high rent burden, high eligibility for affordable housing, and have not had any projects built there.\nA density ridge plot shows the demographic distribution of the census tracts in LA compared to the tracts with affordable housing built in them. There is a greater proportion of Black and Hispanic people in tracts with affordable housing built in them compared to the average across LA.\nA bar plot showing the amount of funding from the LAHD that has gone into building affordable housing. Order in 2015 led to an exponential increase in funding for projects, and the order in 2022 helped expedite permits.\n\n\n\n\n\n\nHOUSEHOLD CENSUS DATA\nAll census data was accessed from census.gov, using an API key and the tidycensus package.\n\nHousehold Income for 2022: Estimated using PUMS (Public Use Microdata Sample) from the American Community Survey. I used the 1-year ACS PUMS file which represents about 1%of the total U.S. population (approximately 1.3 million housing unit records and about 3 million person records). I used the variable HINCP which is household income over the last 12 months, in conjunction with the household size. The file was too big to render every time, so it was exported to csv as pums_2022.csv.\nEligibility calculations: Used information from the Housing Authority of the City of Los Angeles (HACLA) to calculate affordable housing eligibility based on household income and size.\nIncome brackets: Used the equations provided by the U.S Department of Housing and Urban development on income limits.\n\nCENSUS TRACT DATA\n\nTIGER Shapefiles for census tracts in 2022 for California were accessed from census.gov, and used to make more specific observations compared to the PUMA geometries which are areas of every 100,000 people.\n\nNEIGHBORHOODS DATA\n\nCensus tracts and neighborhoods were connected using data from USC’s Neighborhood Data For Social Change which is a lab that aimes to use “data to help local civic actors track measurable change, improve local policies and programs, and ultimately advocate for a better quality of life within their communities”. The data is saved as Census_Tract_Locations__LA__20240206.csv which connected the information from PUMA to the census tract geometries.\n\nAFFORDABLE HOUSING DATA\n\nAffordable housing project data was accessed from data.lacity.org and saved as LAHD_Affordable_Housing_Projects_List__2003_to_Present__20240119.csv. This data set was last updated February 6, 2024, and is owned by the Department of Los Angeles housing. Each entry is a single project that has been started since 2003 to present."
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#assigning-income-categories-to-households",
    "href": "blog/2024-03-09-housing-la/index.html#assigning-income-categories-to-households",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Assigning income categories to households",
    "text": "Assigning income categories to households\n\nCreate income breaks for households above 8 (from 9-20)\n\n# creating dataframe with income brackets and eligibility\npeople &lt;- c(1, 2, 3, 4, 5, 6, 7, 8)\nvery_low &lt;- c(39450, 45050, 50700, 56300, 60850, 65350, 69850, 74350)\nextreme_low &lt;- c(23700, 27050, 30450, 33800, 36550, 39250, 41950, 44650)\nlow &lt;- c(63100, 72100, 81100, 90100, 97350, 104550, 111750, 118950)\n\nincome_breaks &lt;- data.frame(people, extreme_low, very_low, low)\n\n# setting the equations for creating more brackets\n# very low income \nsize &lt;- seq(9, 20, 1)\nvery_low &lt;- data.frame()\nrow_n &lt;- data.frame()\n\nfor (i in seq_along(size)) {\n  income &lt;- 1.32 + (i*.08)\n  limit &lt;- income*56300\n  row &lt;- size[i]\n  row_n &lt;- rbind(row_n, row)\n  very_low = rbind(very_low, limit)\n}\n\nvery_low &lt;- cbind(row_n, very_low) %&gt;% \n  rename(people = X9,\n         very_low = X78820)\n\nextreme &lt;- data.frame()\nfor (i in seq_along(size)) {\n  # https://www.huduser.gov/portal/datasets/il/il2020/2020ILCalc3080.odn#calculator\n  income &lt;- 44120 + (i*4480)\n  extreme &lt;- rbind(extreme, income)\n}\n\nlow &lt;- data.frame()\nfor (i in seq_along(size)) {\n  income &lt;- 1.32 + (i*.08)\n  limit &lt;- income*90100\n  low &lt;- rbind(low, limit)\n}\n\ncols_9_20 &lt;- cbind(extreme, very_low) %&gt;% \n  rename(extreme_low = X48600) %&gt;% \n  cbind(low) %&gt;% \n  rename(low = X126140)\n\nincome_breaks &lt;- rbind(income_breaks, cols_9_20)\n\n\n\nCreating For Loop\nI wanted to iterate over the entire data frame, and based on the household size, assign a threshold value to that row. Then, based on the income, the household would be categorized as either extreme, very low, low, or not eligible.\n\nApplying for loop to the whole data set\n\npuma_22$status &lt;- rep(NA, nrow(puma_22))\n\nfor (person in 1:nrow(puma_22)) {\n  \n  individual &lt;- puma_22$NP[person]\n  \n  income &lt;- income_breaks %&gt;% \n    filter(people == individual)\n  \n  # Define thresholds for labels\n  extreme_threshold &lt;- income[[2]]\n  very_low_threshold &lt;- income[[3]]\n  low_threshold &lt;- income[[4]]\n  \n  # # Assign labels based on thresholds\n  puma_22$status[person] &lt;- ifelse(puma_22[[\"HINCP\"]][person] &lt;= extreme_threshold, \n                              \"extreme\",\n                              ifelse(puma_22[[\"HINCP\"]][person] &gt; extreme_threshold & puma_22[[\"HINCP\"]][person] &lt;= very_low_threshold, \n                                     \"very low\",\n                                     ifelse(puma_22[[\"HINCP\"]][person] &gt; very_low_threshold & puma_22[[\"HINCP\"]][person] &lt;= low_threshold, \n                                            \"low\",\n                                            ifelse(puma_22[[\"HINCP\"]][person] &gt; low_threshold, \"not eligible\", \"non\"))))\n}\n\n# uncount to get the total number of households in each census tract with each status\npuma_wgt &lt;- puma_22 %&gt;% \n  uncount(WGTP)"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#creating-map-plots",
    "href": "blog/2024-03-09-housing-la/index.html#creating-map-plots",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Creating Map Plots",
    "text": "Creating Map Plots\nThe PUMS data is aggregated to locations of at least 100,000 people, but the geographies aren’t at a very useful spatial resolution. To address this problem, I wanted to combine the information for PUMS and neighborhoods, which are more relevant to the average person. To achieve this, I used the data set that included census tracts and neighborhoods, and joined them. This allowed me to make a map of the census tracts with the PUMS household data.\n\n\nCode\npuma_geo &lt;- puma_la %&gt;% \n  select(PUMA, geometry)\n\n\npuma_plot &lt;- puma_wgt %&gt;% \n  group_by(PUMA) %&gt;% \n  count(status) %&gt;% \n  pivot_wider(names_from = \"status\", values_from = \"n\") %&gt;% \n  ungroup() %&gt;% \n  clean_names() %&gt;% \n  select(puma, extreme, very_low, low, not_eligible) %&gt;% \n  mutate(PUMA = puma, \n         total_households = rowSums(.[2:5]),\n         total_eligible = rowSums(.[2:4]),\n         percent_eligible = (total_eligible/total_households) * 100 ) %&gt;% \n  left_join(puma_geo) %&gt;% \n  st_as_sf()\n\n# crop puma plot with the la_tract to remove the top part of LA\npuma_plot_crop &lt;- st_crop(puma_plot, la_tract)\n\n\n# has 2196 points\ntract_neighborhood &lt;- read_csv(here(\"blog\", \"2024-03-09-housing-la\", \"data\", \"Census_Tract_Locations__LA__20240206.csv\")) %&gt;% \n  mutate(census_tract = gsub(\", Los Angeles County, California\", # elements that you want to remove\n                                  \"\", # replace with blank\n                                  Tract)) %&gt;% \n  select(-Tract, census_tract, Neighborhood, Latitude, Longitude) %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), # make into geometry object\n                 crs = st_crs(puma_plot)) %&gt;% \n  st_crop(puma_plot_crop) # neighborhoods only in the census tracts of interest\n\n# make a df with the puma information and census tract geometry \npuma_tract &lt;- puma_plot_crop %&gt;% # has 67 observations\n  st_join(tract_neighborhood,\n                join = st_intersects) %&gt;% # has the same number of points as the neighborhood\n  clean_names() %&gt;% \n  select(neighborhood, census_tract, location, puma, geometry) %&gt;% \n  mutate(census_tract = gsub(\"Census Tract \", # elements that you want to remove\n                                  \"\", # replace with blank\n                                  census_tract))\n\n# rename the tract column\nla_tract &lt;- la_tract %&gt;% \n  rename(census_tract = NAME) %&gt;% \n  select(census_tract, geometry)\n\npuma_tract &lt;- puma_tract %&gt;% \n  st_drop_geometry() %&gt;% \n  left_join(la_tract)\n\npuma_eligibility &lt;- puma_plot %&gt;% \n  st_drop_geometry() %&gt;% \n  select(!PUMA)\n\n# make map of the census tracts with the puma household data\ntract_eligibility &lt;- puma_tract %&gt;% \n  left_join(puma_eligibility, by = \"puma\") %&gt;% \n  filter(!st_is_empty(geometry)) %&gt;% \n  st_as_sf()\n\n\n\nSet up: Rent Burden Plot\nThis plot looked at the GRPIP column, which is the gross rent percentage spent on rent. To qualify as rent burdened, households must spend &gt;30% of their household income on rent. I classified the households as either burdened or not burdened, and then found the percentage of each tract that was rent burdened. I made sure to uncount() the wgt column which is the number of households that each row represents. This allowed me to gain a better estimate of the households that were rent burdened.\n\nrent_burden &lt;- puma_22 %&gt;% \n  group_by(PUMA) %&gt;% \n  rename(percent_rent = GRPIP) %&gt;%  \n  select(WGTP, percent_rent, PUMA) %&gt;% \n  mutate(status = ifelse(percent_rent &gt;= 30, \"burden\", \"not_burden\")) %&gt;% \n  uncount(WGTP) %&gt;% # apply the weights\n  count(status) %&gt;% \n  pivot_wider(names_from = \"status\", values_from = \"n\") %&gt;% \n  ungroup() %&gt;% \n  rename(puma = PUMA) %&gt;% \n  mutate(total = burden+not_burden,\n         percent_burden = (burden/total)*100)\n\nrent_burdened &lt;- puma_tract %&gt;% \n  left_join(rent_burden) %&gt;% \n  filter(!st_is_empty(geometry)) %&gt;% \n  st_as_sf()\n\n\n\nCreating a custom theme\nI created my own theme for my plots I decided that I would have a dark background because it made the brown/yellow colors that reminded me of buildings pop. I chose the font families based on suggested font pairings that were aesthetically pleasing.\n\n# import google fonts \nfont_add_google(name = \"Josefin Sans\",\n                family = \"josefin\") # name we provide ggplot\n\nfont_add_google(name = \"Sen\",\n                family = \"sen\") # name we provide ggplot\n\nfont_add_google(name = \"Tenor Sans\",\n                family = \"tenorSans\") # name we provide ggplot\n\n# Pairs\nfont_add_google(name = \"Playfair Display\",\n                family = \"playfairDisplay\") # name we provide ggplot\n\nfont_add_google(name = \"Alice\",\n                family = \"alice\") # name we provide ggplot\n\n# enable show text here that configures font across platforms\nshowtext_auto()\n\nmy_theme_dark &lt;- theme(\n  plot.title = element_text(size = 20, face = \"bold\", family = \"playfairDisplay\", hjust = 0.5), # Font size set to 16 and bold.\n  plot.caption.position = \"plot\",\n  plot.caption = element_text(size = 10, hjust = 0, family = \"alice\", color = \"white\"),\n  axis.title = element_text(size = 14), # Font size set to 12.\n  axis.text = element_blank(), # no axis text.\n  axis.ticks = element_blank(),\n  legend.title = element_text(size = 15, face = \"bold\", family = \"alice\", color = \"white\"), # Font size of the title of the legend set to 12 and bold.\n  legend.text = element_text(size = 12, color = \"white\"), # font size of the text in the legend\n  plot.background = element_rect(fill = \"black\"),\n  panel.background = element_rect(fill = \"black\"),\n  legend.background = element_rect(fill = \"black\"),\n  panel.grid.major = element_blank(),\n  plot.margin = margin(12, 6, 12, 18),\n  panel.grid.minor = element_blank(), # invisible auxiliary grids\n  strip.background = element_rect(fill = \"black\", color = \"#ff975d\"), # strip background\n  strip.text = element_text(size = 12, face = \"bold\", family = \"alice\", color = \"white\"), # strip texts\n  legend.position = \"top\", # position of the legend\n  legend.box.background = element_rect(color = \"black\"), # background of the plot\n  legend.key.size = unit(5, \"cm\") # size of the legends key\n)\n\nmy_brew_palette15 &lt;- RColorBrewer::brewer.pal(n = 20, name = 'YlGnBu')\nmy_brew_palette10 &lt;- RColorBrewer::brewer.pal(n = 10, name = 'RdBu')\nmy_brew_palette5 &lt;- RColorBrewer::brewer.pal(n = 10, name = 'Reds')\nmy_brew_palette1 &lt;- RColorBrewer::brewer.pal(n = 9, name = 'YlOrBr')\ncolors &lt;- sequential_hcl(9, palette = \"Red-Yellow\")\n\n\n\nPlotting: Eligibility for Affordable Housing and Rent Burden in Census Tracts\nI used this plot to explore the distribution of eligibility across Los Angeles to see if there were any interesting patterns. I then realized that in terms of importance, looking at rent burden is more important since that reflects more about an area and the way people interact with it.\n\n# eligibility of housing in LA\ntract_eligibility_percent &lt;- ggplot(tract_eligibility) +\n  geom_sf(aes(fill = percent_eligible)) +\n  scale_fill_stepsn(colors = my_brew_palette5,\n                    labels = scales::label_percent(scale = 1),\n                    breaks = scales::breaks_width(width = 7)) +\n  labs(title = \"Exploring Affordable Housing Needs in Los Angeles County, CA\",\n       fill = \"Percent Eligible\",\n       caption = \"Households Eligible for Affordable Housing by PUMA in Los Angeles, CA\") + \n  guides(fill = guide_colorbar(barheight = unit(1, units = \"mm\"),  \n                                 barwidth = unit(100, units = \"mm\"),\n                                 direction = \"horizontal\",\n                                 ticks.colour = \"grey20\",\n                                 title.position = \"top\",\n                                 label.position = \"bottom\",\n                                 title.hjust = 0.5)) +\n  my_theme_dark\n\n\n\nComparing Neighborhoods and Census Tracts of Interest\nI was interested in looking at census tracts that had different factors, including high vs low rent burden, high vs low eligibility, and presence or absence of affordable housing. These dynamics often interact, and understanding the people that are affected in these different situations could be important for understanding ways to approach different issues.\n\n\nCode\n# joining the eligibility and rent data together by census tract\nburden_eligible &lt;- rent_burdened %&gt;% \n  st_drop_geometry() %&gt;% \n  left_join(tract_eligibility, by = \"census_tract\") %&gt;% \n  st_as_sf()\n\ntop_burden &lt;- burden_eligible %&gt;% \n  slice_max(order_by = percent_burden,\n            n = 200)\n\n# high burden, no affordable housing\nburden_non &lt;- top_burden %&gt;% \n  slice_min(order_by = percent_burden, \n            n = 25) \n\n# high burden, affordable housing\nburden_ah &lt;- burden_eligible %&gt;% \n  slice_max(order_by = percent_burden,\n            n = 30)\n\n# low burden, with affordable housing - and also have high percentage eligible for affordable housing\nlowburden_ah &lt;- burden_eligible %&gt;% \n  slice_max(order_by = percent_eligible,\n            n = 450) %&gt;% \n  slice_min(order_by = percent_eligible,\n            n = 25)\n\n# low burden, no affordable housing - low percentage of households that qualify for affordable housing\nlowburden_non &lt;- burden_eligible %&gt;% \n  slice_min(order_by = percent_eligible,\n            n = 100) %&gt;% \n  slice_min(order_by = percent_eligible,\n            n = 20)\n\n# neighborhoods right next to undeserved geometry represented by `burden_non`\ninterest &lt;- burden_eligible %&gt;% \n  slice_min(order_by = percent_burden,\n            n = 600) %&gt;% \n  slice_max(order_by = percent_burden,\n            n = 15) \n\n# high burden, no affordable housing\nburden_non_plot &lt;- burden_non %&gt;% \n  st_union() %&gt;% \n  ggplot() +\n  geom_sf() +\n  labs(title = \"Neighborhoods with High Rent Burden, \\nNo Affordable Housing\") +\n  my_theme_dark\n\n# high burden, affordable housing\nburden_ah_plot &lt;- burden_ah %&gt;% \n  st_union() %&gt;% \n  ggplot() +\n  geom_sf() +\n  labs(title = \"Neighborhoods with High Rent Burden, \\nWith Affordale Housing\") +\n  my_theme_dark\n\n# low burden, with affordable housing - and also have high percentage eligible for affordable housing\nlowburden_ah_plot &lt;- lowburden_ah %&gt;% \n  st_union() %&gt;% \n  ggplot() +\n  geom_sf() +\n  labs(title = \"Neighborhoods with Low Rent Burden, \\nWith Affordale Housing\",\n       subtitle = \"and also have high percentage eligible for affordable housing\") +\n  my_theme_dark\n\n# ow percentage of households that qualify for affordable housing\nlowburden_non_plot &lt;- lowburden_non %&gt;% \n  st_union() %&gt;%\n  ggplot() +\n  geom_sf() +\n  labs(title = \"Neighborhoods with Low Rent Burden, \\nNo Affordale Housing\",\n       subtitle = \"low percentage of households that qualify for affordable housing\") +\n  my_theme_dark\n\ninterest_plot &lt;- interest %&gt;% \n  st_union() %&gt;% \n  ggplot() +\n  geom_sf() +\n  labs(title = \"Neighborhood with low rent burden right next \\nto neighborhood with high rent burden and no support\",\n       subtitle = \"50% percentage of households that qualify for affordable housing, less than 20% rent burden\") +\n  my_theme_dark\n\n\nI ended up looking at a cluster of census tracts that had high rent burden, high eligibility, and no affordable housing projects in it. This seemed like a location in which it would be really beneficial to build affordable housing. I wanted to highlight these neighborhoods, and present them as a possible location of interest.\n\n# label Neighborhoods \nn_labels &lt;- data.frame(long = c(33.968132, 33.99926595, 33.9924535, 33.9583695),\n                     lat = c(-118.154518, -118.152339, -118.195177, -118.1809385), \n                     label = c(\"Bell Gardens\", \"Commerce\", \"Maywood\", \"Cudahy\"))\n\nneighborhood_plot &lt;- ggplot(data = burden_non %&gt;% st_union()) +\n  geom_sf(fill = \"#AA592C\", color = \"white\", \n          lwd = 0.2) +\n  geom_point(data = n_labels, \n             aes(x = lat, y = long),\n             color = \"white\") +\n  geom_text(data = n_labels, \n            aes(x = lat, y = long, label = label),\n            vjust = -1, \n            color = \"white\", \n            family = \"alice\",\n            size = 9) +\n  guides(fill = \"none\") +\n  my_theme_dark\n\nneighborhood_plot\n\n\n\n\n\n\nPlotting: Rent burden with affordable housing projects\nThis plot shows the distribution of rent burden across Los Angeles, and the location of affordable housing projects since 2003. The color of the filling reminds me of brick, and brought to mind a theme of buildings. I wanted to be color blind friendly so I chose blue dots for the affordable housing so that they could be clearly seen. The selection of these colors ended up being the entire theme for my infographic, and made the color selection in words and graphs all act as a very intentional legend throughout the entire plot.\nI also added an arrow to the plot that indicated the census tract of interest I highlighted above. I decided to do that because I want all my work to be an opportunity to find solutions and highlighting a place that is potentially being undeserved or ignored by the city of LA can provide the opportunity for intentional project development in the future.\n\nbase_map &lt;- ggplot(rent_burdened) +\n  geom_blank() +\n  geom_sf(aes(fill = percent_burden), color = \"black\", lwd = 0.05) +\n  scale_fill_stepsn(colors = rev(colors),\n                    breaks = scales::breaks_width(width = 5),\n                    labels = scales::label_percent(scale = 1)) +\n  guides(fill = guide_colorbar(barheight = unit(1, units = \"mm\"),\n                                 barwidth = unit(220, units = \"mm\"),\n                                 direction = \"horizontal\",\n                                 ticks.colour = \"grey20\",\n                                 title.position = \"top\",\n                                 label.position = \"bottom\",\n                                 title.hjust = 0.5)) +\n  geom_sf(data = ah_clean, aes(color = \"skyblue\"), alpha = 0.5, size = 1, color = \"skyblue\") +\n  labs(fill = \"Percent of Census Tract Burdened\") +\n  guides(color = \"Hello\") +\n  my_theme_dark\n\n# create the arrow \nburden_non_pt &lt;- data.frame(\n  y = c(33.99),\n  x = c(-118.13795),\n  #     yend = c(33.93291),\n  # xend = c(-118.66136)\n  yend = c(33.877222),\n  xend = c(-117.92694)\n)\n\n# add arrow to the plot \nburden_plot &lt;- base_map +\n    geom_curve(data = burden_non_pt,\n             aes(x = x, y = y, xend = xend, yend = yend),\n             arrow = arrow(length = unit(0.01, \"npc\"), type = \"open\"),\n             #linetype = \"dashed\",\n             curvature = -0.3,\n             size = 1.5,\n             color = \"#AA592C\")\n# print plot\nburden_plot"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#accessing-the-demographics",
    "href": "blog/2024-03-09-housing-la/index.html#accessing-the-demographics",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Accessing the demographics",
    "text": "Accessing the demographics\n\n\nCode\n# load list of variables that I could access\nvariables &lt;- load_variables(2022, \"acs1\", cache = TRUE)\n\nah_tracts &lt;- unique(ah_clean$NAME)\n\n# B01001A is Sex by Age (White Alone)\n# B01001B is Sex by Age (Black or African American Alone)\n# B01001\n\n B01001 &lt;- variables %&gt;% \n  filter(str_detect(name, \"B01001\"))\n\n# has the demographic info\nla_tract_age &lt;- get_acs(\n  state = \"CA\",\n  county = \"Los Angeles\",\n  geography = \"tract\",\n  variables = B01001$name,\n  geometry = TRUE,\n  year = 2022\n)\n\ntract_ethnicity &lt;- la_tract_age %&gt;%\n  mutate(NAME = gsub(\"; Los Angeles County; California\", # elements that you want to remove\n                                  \"\", # replace with blank\n                                  NAME)) %&gt;%\n  mutate(NAME = gsub(\"Census Tract \", # elements that you want to remove\n                                  \"\", # replace with blank\n                                  NAME)) %&gt;% \n  rename(census_tract = NAME)\n\n#unique(tract_ethnicity$census_tract)\n\n# make a list of the census tracts of interest \non_plot &lt;- lowburden_ah %&gt;% \n  mutate(area = \"lowburden_ah\") %&gt;% \n  rbind(burden_ah %&gt;% mutate(area = \"burden_ah\")) %&gt;% \n  rbind(burden_non %&gt;%  mutate(area = \"burden_non\")) %&gt;% \n  rbind(lowburden_non %&gt;% mutate(area = \"lowburden_non\")) %&gt;% \n  select(census_tract, area)\n\n# filter the tracts in the age / race df \nsex_age_ethnicity &lt;- tract_ethnicity %&gt;% \n  \n  # replace the variables with more intuitive information \n  mutate(variable = gsub(\"B01001A\",\n                       \"white\",\n                       variable),\n         variable = gsub(\"B01001B\",\n                       \"black\",\n                       variable),\n         variable = gsub(\"B01001C\",\n                       \"ai\", # american indian and alaska native\n                       variable),\n         variable = gsub(\"B01001D\",\n                       \"asian\",\n                       variable),\n         variable = gsub(\"B01001E\",\n                       \"haw\", # hawaiian and pacific islander\n                       variable),\n         variable = gsub(\"B01001F\",\n                       \"other\",\n                       variable),\n         variable = gsub(\"B01001G\",\n                       \"two\", # two or more \n                       variable),\n                  variable = gsub(\"B01001H\",\n                       \"wn\", # white non hispanic and latino\n                       variable),\n         variable = gsub(\"B01001I\",\n                       \"hisp\", # hispanic and latino\n                       variable),\n         variable = gsub(\"B01001_\",\n                       \"total_\",\n                       variable)) %&gt;% \n  separate_wider_delim(cols = 3,\n                       delim = \"_\",\n                       names = c(\"group\", \"age_variable\")) \n\n\n# -------------------- demographics of affordable housing tracts\nah_tracts_eth &lt;- sex_age_ethnicity %&gt;% \n  filter(census_tract %in% ah_tracts) %&gt;% \n  filter(age_variable == \"001\") %&gt;% \n  select(-c(GEOID, age_variable, moe, geometry)) %&gt;% \n  mutate(status = \"affordable\")\n\nah_tot &lt;- ah_tracts_eth %&gt;% \n  filter(group == \"total\") %&gt;% \n  select(census_tract, group, estimate) %&gt;% \n  rename(totals = group,\n         total_est = estimate)\n\nah_tracts_eth &lt;- ah_tracts_eth %&gt;% \n  filter(group != \"total\") %&gt;% \n  left_join(ah_tot, by = \"census_tract\") %&gt;% \n  mutate(percent = round((estimate/total_est)*100, 1)) %&gt;% \n  select(census_tract, group, estimate, percent, status) \n\n# -------------------- demographics of all tracts\nall_eth &lt;- sex_age_ethnicity %&gt;% \n  filter(census_tract %in% rent_burdened$census_tract) %&gt;% \n  filter(age_variable == \"001\") %&gt;% \n  select(-c(GEOID, age_variable, moe, geometry)) %&gt;% \n  mutate(status = \"non\")\n\nall_tot &lt;- all_eth %&gt;% \n  filter(group == \"total\") %&gt;% \n  select(census_tract, group, estimate) %&gt;% \n  rename(totals = group,\n         total_est = estimate)\n\nall_eth &lt;- all_eth %&gt;% \n  filter(group != \"total\") %&gt;% \n  left_join(all_tot, by = \"census_tract\") %&gt;% \n  mutate(percent = round((estimate/total_est)*100, 1)) %&gt;% \n  select(census_tract, group, estimate, percent, status) \n\n# -------------------- combine the tracts\ncompare &lt;- all_eth %&gt;% \n  rbind(ah_tracts_eth) %&gt;% \n  rename(groups = group) %&gt;% \n  filter(!groups %in% c(\"ai\", \"haw\", \"two\"))"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#creating-ridge-plots",
    "href": "blog/2024-03-09-housing-la/index.html#creating-ridge-plots",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Creating Ridge Plots",
    "text": "Creating Ridge Plots\nComparing the demographics of all of LA vs the census tracts with affordable housing in them.\n\nshowtext_auto()\n\ncustom_labels &lt;- c(\"White (non Hispanic \\nor Latino)\", \"White\", \"Other\", \"Hispanic\", \"Black\", \"Asian\")\n\nsubtitle &lt;- \"Compared to the demographic distribution of &lt;span style = 'color: #DDB472; font-size: 16pt;'&gt;census tracts in Los Angeles overall&lt;/span&gt;, the &lt;span style = 'color: skyblue; font-size: 16pt;'&gt;census tracts that have affordable housing&lt;/span&gt; projects built since 2003 have **greater** proportions of blank and hispanic individuals.\"\n\nc_means &lt;- compare %&gt;% \n  group_by(status, groups) %&gt;% \n  summarize(means = mean(percent, na.rm = TRUE),\n            .groups = \"drop\")\n\nggplot(compare) +\n  geom_density_ridges(aes(x = percent, y = groups, fill = status, linetype = status), \n                      alpha = 0.7, \n                      quantile_lines=TRUE,\n                      quantile_fun = mean,\n                      scale = 0.9) +\n  scale_y_discrete(expand = c(0.01, 0.5),\n                   labels = rev(custom_labels)) +\n  xlim(0,100) +\n  scale_fill_manual(values = c(\"skyblue\", \"#DDB472\")) +\n  geom_text(data = c_means, aes(x = means, y = groups, label = paste(round(means, 0)), color = status),\n            family = \"alice\",\n            vjust = 1, \n            hjust = 0,\n            #nudge_x = -7\n            size = 6) +\n  scale_color_manual(values = c(\"skyblue\", \"#DDB472\")) +\n  labs(y = \"Percent of Census Tract\", \n       x = \"Percent of Census Tract\",\n       fill = \"\"\n       ) +\n  guides(fill = \"none\", linetype = \"none\", color = \"none\") +\n  theme(plot.title = element_text(size = 20, family = \"playfairDisplay\", hjust = 0.5), # Font size set to 16 and bold.\n        plot.caption.position = \"plot\",\n        plot.title.position = \"plot\",\n        plot.caption =  ggtext::element_textbox_simple(size = 15, hjust = 0, family = \"alice\", color = \"white\"),\n        axis.title = element_text(size = 14), # Font size set to 12.\n        axis.text.y = element_text(size = 16, color = \"white\", family = \"alice\"),\n        axis.text.x = element_blank(),\n        axis.title.x = element_text(size = 16, color = \"white\", family = \"alice\"),\n        legend.title = element_text(size = 15, face = \"bold\", family = \"alice\", color = \"white\"), # Font size of the title of the legend set to 12 and bold.\n        legend.text = element_text(size = 10, color = \"white\"), # font size of the text in the legend\n        plot.background = element_rect(fill = \"black\"),\n        panel.background = element_rect(fill = \"black\"),\n        legend.background = element_rect(fill = \"black\"),\n        plot.margin = margin(12, 6, 12, 18),\n        panel.grid = element_blank(), # invisible auxiliary grids\n        panel.grid.minor.x = element_line(color = \"white\", size = 0.1, linetype = \"dashed\"),\n        strip.background = element_rect(fill = \"black\", color = \"#ff975d\"), # strip background\n        strip.text = element_text(size = 12, face = \"bold\", family = \"alice\", color = \"white\"), # strip texts\n        legend.position = \"top\", # position of the legend\n        legend.box.background = element_rect(color = \"black\"), # background of the plot\n        legend.key.size = unit(1, \"cm\") # size of the legends key\n  )"
  },
  {
    "objectID": "blog/2024-03-09-housing-la/index.html#creating-bar-plot",
    "href": "blog/2024-03-09-housing-la/index.html#creating-bar-plot",
    "title": "Who, What, Where: Exploring Affordable Housing in Los Angeles, CA",
    "section": "Creating Bar Plot",
    "text": "Creating Bar Plot\n\nSet up\nI wanted to highlight the two years so that the viewer could easily see the years I was focusing on. To do this, I highlighted 2015 and 2022 using geom_col.\n\norder_2015 &lt;- data.frame(\n  y = c(210000000),\n  x = c(2012),\n  yend = c(50000000),\n  xend = c(2015)\n)\n\norder_2022 &lt;- data.frame(\n  y = c(250000000),\n  x = c(2024),\n  yend = c(190000000),\n  xend = c(2022)\n)\n\n# looking at the total construction of affordable housing in each year \nah_clean_plot &lt;- ah_clean %&gt;% \n  drop_na() %&gt;% \n  group_by(year) %&gt;% \n  summarize(total_funding = sum(lahd_funded))\n\n\n\nPlotting: Bar Plot\nOnce we plotted this bar plot, we can see that after 2015, the amount of money going into affordable housing increased exponentially. As it began to decrease, for factors that we are not going into here, another mayor passed executive directive 1 that expedited the process of building 100% affordable housing projects. This order made the permitting and zoning processes much easier, and two years later there have been “more than 16,150 affordable units” (Los Angeles Daily News) proposed. The hope is that this momentum continues.\n\nah_clean_plot %&gt;%  \n  ggplot() +\n  geom_col(data = ah_clean_plot %&gt;% \n             filter(year != \"2015\"),\n           aes(x = year, y = total_funding),\n           alpha = 0.7,\n           color = \"#DDB472\",\n         fill = \"black\") +\n  geom_col(data = ah_clean_plot %&gt;% filter(year == 2015),\n           aes(x = year, y = total_funding),\n         color = \"#DDB472\",\n         fill = \"#DDB472\") +\n  geom_col(data = ah_clean_plot %&gt;% filter(year == 2022),\n           aes(x = year, y = total_funding),\n         color = \"#DDB472\",\n         fill = \"#DDB472\") +\n  scale_y_continuous(expand=c(0,0),\n                     labels = function(x) paste0(x / 1e6, \"M\")) +\n  geom_curve(data = order_2015,\n               aes(x = x, y = y, xend = xend, yend = yend),\n              arrow = arrow(length = unit(0.01, \"npc\")),\n             size = 0.7,\n             curvature = -0.6,\n             color = \"white\") +\n    geom_curve(data = order_2022,\n               aes(x = x, y = y, xend = xend, yend = yend),\n              arrow = arrow(length = unit(0.01, \"npc\")),\n             size = 0.7,\n             curvature = 0.3,\n             color = \"white\") +\n  xlim(2000, 2035) +\n  annotate(geom = \"text\", x = 2009, y = 250000000, \n           label = \"Mayor Eric Garcetti passes \\nExecutive Directive 13, \\nSupport for Affordable Housing (ED 13)\",\n           color = \"white\",\n           family = \"alice\",\n           size = 6) +\n  annotate(geom = \"text\", x = 2028, y = 250000000, \n           label = \"Mayor Karen Bass passes \\nExecutive Directive 1, \\nExpedition of Permits (ED 1)\",\n           color = \"white\",\n           family = \"alice\",\n           size = 6) +\n  theme_classic() +\n  labs(x = 'Year',\n       y = 'Total Funding (in millions)'\n  ) +\n  theme(plot.title = element_text(size = 20, face = \"bold\", family = \"playfairDisplay\", hjust = 0.5), # Font size set to 16 and bold.\n        plot.caption.position = \"plot\",\n        plot.caption = element_text(size = 10, hjust = 0, family = \"alice\", color = \"white\"),\n        axis.title = element_text(size = 14), # Font size set to 12.\n        axis.text = element_text(size = 16, color = \"white\", family = \"alice\"),\n        #axis.ticks.x = element_line(size = 10, color = \"white\"),\n        legend.title = element_text(size = 15, face = \"bold\", family = \"alice\", color = \"white\"), # Font size of the title of the legend set to 12 and bold.\n        legend.text = element_text(size = 10, color = \"white\"), # font size of the text in the legend\n        plot.background = element_rect(fill = \"black\"),\n        panel.background = element_rect(fill = \"black\"),\n        legend.background = element_rect(fill = \"black\"),\n        plot.margin = margin(20, 6, 12, 20),\n        axis.line.x = element_line(color = \"white\"),\n        panel.grid.major.y = element_line(color = \"white\", size = 0.25), # invisible auxiliary grids\n        strip.background = element_rect(fill = \"black\", color = \"#ff975d\"), # strip background\n        strip.text = element_text(size = 12, face = \"bold\", family = \"alice\", color = \"white\"), # strip texts\n        legend.position = \"top\", # position of the legend\n        legend.box.background = element_rect(color = \"black\"), # background of the plot\n        legend.key.size = unit(1, \"cm\") # size of the legends key\n  )"
  },
  {
    "objectID": "about.html#master-of-environmental-data-science",
    "href": "about.html#master-of-environmental-data-science",
    "title": "About",
    "section": "",
    "text": "Highlighted Coursework: Machine Learning in Environmental Science; Environmental Policy Evaluation; Data Visualization and Communication; Python for Environmental Data Science (EDS); Modeling Environmental Systems; Analytical Workflows and Scientific Reproducibility"
  },
  {
    "objectID": "about.html#environmental-science-and-psychological-brain-sciences",
    "href": "about.html#environmental-science-and-psychological-brain-sciences",
    "title": "About",
    "section": "",
    "text": "Highlighted Coursework: GIS for Environmental Application; Exploring Water Data Honors: Outstanding Senior Award, Environmental Studies"
  },
  {
    "objectID": "about.html#environmental-science-b.s.-psychological-brain-sciences-b.s.",
    "href": "about.html#environmental-science-b.s.-psychological-brain-sciences-b.s.",
    "title": "About",
    "section": "",
    "text": "Highlighted Coursework: GIS for Environmental Application; Exploring Water Data Honors: Outstanding Senior Award, Environmental Studies"
  },
  {
    "objectID": "blog/2023-12-decline-groundwater/index.html",
    "href": "blog/2023-12-decline-groundwater/index.html",
    "title": "Climatic Trends and Agriculture Expansion on Declining Water Levels in Arid Aquifer, Iran",
    "section": "",
    "text": "REPOSITORY: To find full analysis click this repo!"
  },
  {
    "objectID": "blog/2023-12-decline-groundwater/index.html#multiple-linear-regression-with-aei-mean",
    "href": "blog/2023-12-decline-groundwater/index.html#multiple-linear-regression-with-aei-mean",
    "title": "Climatic Trends and Agriculture Expansion on Declining Water Levels in Arid Aquifer, Iran",
    "section": "Multiple Linear Regression with AEI mean",
    "text": "Multiple Linear Regression with AEI mean\nI conducted an OLS multiple linear regression with lm() to look at how AEI and precipitation impacted the change in groundwater level. The results of the OLS regression are shown in Figure XYZ. I used ggplot() to create a scatter plot of the mean AEI and groundwater level change over time. Then I used geom_smooth() to plot a linear regression to see how these variables changed over time. The groundwater change slope is negative, and the AEI slope is positive.\n\n\nCode\nir_gw_plot\n\n\n\n\n\nThe result of the multiple linear regression model are in Table 1, and they indicate that for every 1 ha increase in AEI, there is a 0.01 m decrease in groundwater level. The effect of AEI has a p-value of 0.032, which is small enough that there is statistical significance of this analysis. However, the p-value for annual precipitation is 0.591, meaning that there can be no statistical significance taken from the role of precipitation on groundwater level change. This model had an R^2 value of 0.50 which means it explained 50% of the variation in groundwater level change.\n\n\n\nTable 1: Results of Multiple Linear Regression of Area Equipped for Irrigation and Precipitation on Groundwater Level Change\n\n\n\n\n\nTable 2: Results of Simple Linear Regression of Area Equipped on Irrigation on Groundwater Level Change\n\n\nThen I ran a simple linear regression model to see the effect of just AEI mean. The results in Table 2 show that the p-value is 0.02, which increases our confidence level that AEI mean is statistically significant. Here, the R^2 value has increased to 0.56, which means this model explains 56% of the variation in groundwater level change. Given the higher R^2 value, this model is more useful than the one that includes precipitation."
  },
  {
    "objectID": "blog/2023-12-decline-groundwater/index.html#simple-linear-regression-with-median-soil-adjusted-vegetation-index-savi",
    "href": "blog/2023-12-decline-groundwater/index.html#simple-linear-regression-with-median-soil-adjusted-vegetation-index-savi",
    "title": "Climatic Trends and Agriculture Expansion on Declining Water Levels in Arid Aquifer, Iran",
    "section": "Simple Linear Regression with median Soil Adjusted Vegetation Index (SAVI)",
    "text": "Simple Linear Regression with median Soil Adjusted Vegetation Index (SAVI)\n\n\n\nFigure 2: Buffer and Aquifer crop of Landsat satellite image\n\n\nI was unhappy with the temporal resolution of the irrigation data, since it was an aggregate in 5-year chunks that was already accessing data samples. To have more confidence in my results, I calculated the SAVI from the area of a buffer around the well being used to to collect the groundwater level data, and across the aquifer in Python. Then I extracted summary statistics from each raster.\n\n\nCode\nsavi_plot\n\n\n\n\n\nI fit a linear regression model to the data as seen in Figure 3. This graph indicates that over time the median index value around the groundwater well was decreasing. Since the scale is from 0-1, the table results make more snese when you divide by 10. Reading it that way, for every 0.1 increase in the SAVI index, groundwater levels. The results of the quadratic regression are shown in Table 3, and show a statistically significant effect (p-value of 0.001) of the median SAVI in the buffer on the groundwater levels. Furthermore, the R^2 value is 0.30, which means this model accounts for 30% of the variation in groundwater level change.\n\n\n\nTable 3: Results of Simple Linear Regression of median Soil Adjusted Vegetation Index (SAVI) on Irrigation on Groundwater Level Change\n\n\nHYPOTHESIS TESTING\nDue to the statistical significance of the median soil adjusted vegetation index and the non-statistical significance of the annual precipitation, we fail to accept the null hypothesis.\nNull Hypothesis: In the Qazvin Plain, there is no difference of the impact of annual precipitaion and agricultural production changes on groundwater level changes from 1984-2019.\nAlternative Hypothesis: In the Qazvin Plain, there is a difference of the impact of annual precipitation and agricultural production on groundwater level changes from 1984-2019.\nCONFIDENCE INTERVAL\nI calculated a confidence interval and am 95% confident that the true change in groundwater level for every 0.1 increase in the median SAVI, is within the range of 1.6 and 5.5m."
  },
  {
    "objectID": "blog/2023-12-decline-groundwater/index.html#footnotes",
    "href": "blog/2023-12-decline-groundwater/index.html#footnotes",
    "title": "Climatic Trends and Agriculture Expansion on Declining Water Levels in Arid Aquifer, Iran",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nI used NDVI initially but realized that there was very sparse vegetation in the area and so I would want to account for the soil reflectance.↩︎"
  },
  {
    "objectID": "baking.html",
    "href": "baking.html",
    "title": "Emotional Baking",
    "section": "",
    "text": "Beets: Luna"
  },
  {
    "objectID": "baking.html#pesto-eva",
    "href": "baking.html#pesto-eva",
    "title": "Emotional Baking",
    "section": "Pesto: Eva",
    "text": "Pesto: Eva"
  },
  {
    "objectID": "baking.html#pea-dip-jackson",
    "href": "baking.html#pea-dip-jackson",
    "title": "Emotional Baking",
    "section": "Pea Dip: Jackson",
    "text": "Pea Dip: Jackson"
  },
  {
    "objectID": "baking.html#loquat-chutney-luna",
    "href": "baking.html#loquat-chutney-luna",
    "title": "Emotional Baking",
    "section": "Loquat Chutney: Luna",
    "text": "Loquat Chutney: Luna"
  },
  {
    "objectID": "baking/zesty_briny_baked_chicken/index.html",
    "href": "baking/zesty_briny_baked_chicken/index.html",
    "title": "Zesty Briny Baked Chicken",
    "section": "",
    "text": "Ingredients\n\n\nThe Path\n\n\n\n\nCitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Zesty {Briny} {Baked} {Chicken}},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/zesty_briny_baked_chicken/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Zesty Briny Baked\nChicken.” June 5, 2024. https://lunacatalan.github.io/baking/zesty_briny_baked_chicken/index.html."
  },
  {
    "objectID": "baking.html#other-ideas",
    "href": "baking.html#other-ideas",
    "title": "Emotional Baking",
    "section": "",
    "text": "Beets: Luna"
  },
  {
    "objectID": "baking/twice_baked_potato/index.html",
    "href": "baking/twice_baked_potato/index.html",
    "title": "Twice-Baked Potato",
    "section": "",
    "text": "CitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Twice-Baked {Potato}},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/twice_baked_potato/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Twice-Baked Potato.”\nJune 5, 2024. https://lunacatalan.github.io/baking/twice_baked_potato/index.html."
  },
  {
    "objectID": "baking/orzo_salad/index.html",
    "href": "baking/orzo_salad/index.html",
    "title": "Orzo Salad",
    "section": "",
    "text": "CitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Orzo {Salad}},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/orzo_salad/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Orzo Salad.” June 5,\n2024. https://lunacatalan.github.io/baking/orzo_salad/index.html."
  },
  {
    "objectID": "baking/pea_dip/index.html",
    "href": "baking/pea_dip/index.html",
    "title": "Green Pea Dip",
    "section": "",
    "text": "CitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Green {Pea} {Dip}},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/pea_dip/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Green Pea Dip.” June 5,\n2024. https://lunacatalan.github.io/baking/pea_dip/index.html."
  },
  {
    "objectID": "baking/citrus_fennel_salad/index.html",
    "href": "baking/citrus_fennel_salad/index.html",
    "title": "Citrus Fennel Salad",
    "section": "",
    "text": "CitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Citrus {Fennel} {Salad}},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/citrus_fennel_salad/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Citrus Fennel Salad.”\nJune 5, 2024. https://lunacatalan.github.io/baking/citrus_fennel_salad/index.html."
  },
  {
    "objectID": "baking/kale_salad/index.html",
    "href": "baking/kale_salad/index.html",
    "title": "Kale and Pomegranate Salad",
    "section": "",
    "text": "CitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Kale and {Pomegranate} {Salad}},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/kale_salad/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Kale and Pomegranate\nSalad.” June 5, 2024. https://lunacatalan.github.io/baking/kale_salad/index.html."
  },
  {
    "objectID": "baking/beer_bat_cauliflower/index.html",
    "href": "baking/beer_bat_cauliflower/index.html",
    "title": "Beer Battered Cauliflower Wings",
    "section": "",
    "text": "CitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Beer {Battered} {Cauliflower} {Wings}},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/beer_bat_cauliflower/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Beer Battered Cauliflower\nWings.” June 5, 2024. https://lunacatalan.github.io/baking/beer_bat_cauliflower/index.html."
  },
  {
    "objectID": "baking/couscous_salad/index.html",
    "href": "baking/couscous_salad/index.html",
    "title": "Couscous Salad",
    "section": "",
    "text": "CitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Couscous {Salad}},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/couscous_salad/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Couscous Salad.” June 5,\n2024. https://lunacatalan.github.io/baking/couscous_salad/index.html."
  },
  {
    "objectID": "baking/sourdough/index.html",
    "href": "baking/sourdough/index.html",
    "title": "Sourdough",
    "section": "",
    "text": "CitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Sourdough},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/sourdough/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Sourdough.” June 5,\n2024. https://lunacatalan.github.io/baking/sourdough/index.html."
  },
  {
    "objectID": "baking/pesto/index.html",
    "href": "baking/pesto/index.html",
    "title": "Pesto",
    "section": "",
    "text": "CitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Pesto},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/pesto/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Pesto.” June 5, 2024. https://lunacatalan.github.io/baking/pesto/index.html."
  },
  {
    "objectID": "baking/tahini_cauliflower/index.html",
    "href": "baking/tahini_cauliflower/index.html",
    "title": "Tahini Cauliflower",
    "section": "",
    "text": "CitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Tahini {Cauliflower}},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/tahini_cauliflower/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Tahini Cauliflower.”\nJune 5, 2024. https://lunacatalan.github.io/baking/tahini_cauliflower/index.html."
  },
  {
    "objectID": "baking/loquat_chutney/index.html",
    "href": "baking/loquat_chutney/index.html",
    "title": "Loquat Chutney",
    "section": "",
    "text": "CitationBibTeX citation:@online{herschenfeld-catalán2024,\n  author = {Herschenfeld-Catalán, Luna},\n  title = {Loquat {Chutney}},\n  date = {2024-06-05},\n  url = {https://lunacatalan.github.io/baking/loquat_chutney/index.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nHerschenfeld-Catalán, Luna. 2024. “Loquat Chutney.” June 5,\n2024. https://lunacatalan.github.io/baking/loquat_chutney/index.html."
  }
]